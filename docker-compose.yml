version: '3.8'

# 嵌入式轻NAS管理软件 Docker Compose 配置
# Embedded Lightweight NAS Management Software Docker Compose Configuration

services:
  # 主应用服务 / Main application service
  nas-manager:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nas-manager
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      # Docker套接字，用于容器管理 / Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock
      # 应用数据目录 / Application data directory
      - ./data:/app/data
      # 日志目录 / Log directory
      - ./logs:/app/logs
      # 备份目录 / Backup directory
      - ./backups:/app/backups
      # 配置文件 / Configuration files
      - ./apps.json:/app/apps.json:ro
      - ./translations:/app/translations:ro
    environment:
      # Flask环境配置 / Flask environment configuration
      - FLASK_ENV=docker
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_here_change_in_production}
      - APP_PORT=5000
      - APP_HOST=0.0.0.0
      - APP_DEBUG=False
      
      # 数据库配置 / Database configuration
      - DATABASE_PATH=/app/data/users.db
      
      # Docker配置 / Docker configuration
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DOCKER_TIMEOUT=30
      
      # 文件管理器配置 / File manager configuration
      - FILEBROWSER_PORT=8088
      - FILEBROWSER_IMAGE=filebrowser/filebrowser:latest
      - FILEBROWSER_DATA_DIR=/app/data
      - FILEBROWSER_CONFIG_DIR=/app/filebrowser/config
      - FILEBROWSER_DB_DIR=/app/filebrowser/database
      
      # 日志配置 / Logging configuration
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/app.log
      - LOG_MAX_SIZE=10485760
      - LOG_BACKUP_COUNT=5
      
      # 安全配置 / Security configuration
      - PASSWORD_MIN_LENGTH=12
      - WTF_CSRF_ENABLED=True
      - WTF_CSRF_TIME_LIMIT=3600
      
      # 国际化配置 / Internationalization configuration
      - DEFAULT_LANGUAGE=zh
      - BABEL_DEFAULT_TIMEZONE=Asia/Shanghai
      
      # 资源监控配置 / Resource monitoring configuration
      - MONITOR_INTERVAL=2
      - MONITOR_ENABLED=True
      
      # 应用商店配置 / App store configuration
      - APP_STORE_CONFIG_FILE=apps.json
      - APP_STORE_ENABLED=True
      
      # 备份配置 / Backup configuration
      - BACKUP_ENABLED=True
      - BACKUP_DIR=/app/backups
      - BACKUP_RETENTION_DAYS=7
      
      # 时区配置 / Timezone configuration
      - TZ=Asia/Shanghai
    env_file:
      - .env
    depends_on:
      - filebrowser
    networks:
      - nas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nas-manager.rule=Host(`nas.local`)"
      - "traefik.http.services.nas-manager.loadbalancer.server.port=5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/resource"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 文件管理器服务 / File manager service
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    restart: unless-stopped
    ports:
      - "8088:80"
    volumes:
      # 文件管理器数据目录 / File manager data directory
      - ./data:/srv
      # 文件管理器配置目录 / File manager config directory
      - ./filebrowser/config:/config
      # 文件管理器数据库目录 / File manager database directory
      - ./filebrowser/database:/database
    environment:
      - TZ=Asia/Shanghai
    networks:
      - nas-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.rule=Host(`nas.local`) && PathPrefix(`/filemanager`)"
      - "traefik.http.services.filebrowser.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 反向代理服务（可选） / Reverse proxy service (optional)
  nginx:
    image: nginx:alpine
    container_name: nas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Nginx配置 / Nginx configuration
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # SSL证书（可选） / SSL certificates (optional)
      - ./ssl:/etc/nginx/ssl:ro
      # 静态文件缓存 / Static file cache
      - nginx-cache:/var/cache/nginx
    depends_on:
      - nas-manager
      - filebrowser
    networks:
      - nas-network
    labels:
      - "traefik.enable=false"
    profiles:
      - proxy

  # 数据库服务（可选，用于生产环境） / Database service (optional, for production)
  postgres:
    image: postgres:13-alpine
    container_name: nas-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nas_manager
      - POSTGRES_USER=nas_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-nas_password_123}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d:ro
    networks:
      - nas-network
    labels:
      - "traefik.enable=false"
    profiles:
      - database

  # Redis缓存服务（可选） / Redis cache service (optional)
  redis:
    image: redis:7-alpine
    container_name: nas-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_123}
    volumes:
      - redis-data:/data
    networks:
      - nas-network
    labels:
      - "traefik.enable=false"
    profiles:
      - cache

  # 监控服务（可选） / Monitoring service (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: nas-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - nas-network
    labels:
      - "traefik.enable=false"
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: nas-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - nas-network
    labels:
      - "traefik.enable=false"
    profiles:
      - monitoring

# 网络配置 / Network configuration
networks:
  nas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# 数据卷配置 / Volume configuration
volumes:
  # Nginx缓存 / Nginx cache
  nginx-cache:
    driver: local
  
  # PostgreSQL数据 / PostgreSQL data
  postgres-data:
    driver: local
  
  # Redis数据 / Redis data
  redis-data:
    driver: local
  
  # Prometheus数据 / Prometheus data
  prometheus-data:
    driver: local
  
  # Grafana数据 / Grafana data
  grafana-data:
    driver: local 